{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","setState","message","success","props","onSuccess","catch","err","error","finally","name","className","style","width","margin","this","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onlick","addItemToCart","FoodList","curRest","setCurRest","restaurants","setRestaurants","foodData","setFoodData","useEffect","json","resData","console","log","restId","value","onSelect","map","item","id","dataSource","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","totalPrice","orderItemList","cartData","setCartData","checking","setChecking","onClick","shape","placement","onClose","visible","footer","justifyContent","toFixed","disabled","length","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","render","onCancel","destroyOnClose","preserve","Header","Layout","Content","Title","App","authed","setAuthed","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6a10fb8.chunk.js","sourcesContent":["export const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n};\n\nexport const signup = (data) => {\n    const signupUrl = \"/signup\";\n\n    return fetch(signupUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to sign up\");\n        }\n    });\n};\n\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};","import React, {Component} from 'react';\nimport { Form, Input, Button, message} from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { login } from \"../utils\";\nclass LoginForm extends Component {\n    state = {\n        loading: false,\n    }\n    onFinish = (data) => {\n        this.setState({\n            loading: true,\n        });\n        login(data)\n            .then(() => {\n                message.success(`Login Successful`);\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render() {\n        return (\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n                onFinish={this.onFinish}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\n                    loading={this.state.loading}>\n                        Log in\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nexport default LoginForm;","import React, {useEffect, useState} from 'react';\nimport { Select, List, message, Card, Tooltip, Button} from 'antd';\nimport {addItemToCart, getMenus, getRestaurants} from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\nconst AddToCartButton = ({itemId}) => {\n    const [loading, setLoading] = useState(false);\n    const addToCart = () => {\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    }\n    return (\n        <Tooltip title={\"Add to shopping cart\"}>\n            <Button\n                icon={<PlusOutlined/>}\n                type=\"primary\"\n                loading={loading}\n                onlick={addToCart}\n            />\n        </Tooltip>\n    )\n}\nfunction FoodList(props) {\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [foodData, setFoodData] = useState([]);\n    useEffect(\n        () => {\n            setLoading(true);\n            getRestaurants()\n                .then( resData => {\n                console.log(\"res data ->\", resData);\n                setRestaurants(resData);\n            })\n                .catch( err => {\n                    console.log(\"err ->\", err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                })\n        }\n    , [])\n\n    useEffect( () => {\n        if (curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest])\n    return (\n        <div>\n            <Select value = {curRest}\n                    style={{ width: 300 }}\n                    onSelect={value => setCurRest(value)}\n                    placeholder= \"Select a restaurant\"\n                    loading = {loading}\n            >\n                {\n                    restaurants.map(item => {\n                        return <Option key={item.id}\n                                       value={item.id}>\n                            {item.name}\n                        </Option>\n                    })\n                }\n            </Select>\n            {\n                curRest &&\n                    <List\n                        dataSource={foodData}\n                        style={{ marginTop: 20 }}\n                        loading={loading}\n                        grid={{\n                            gutter: 16,\n                            xs: 1,\n                            sm: 2,\n                            md: 4,\n                            lg: 4,\n                            xl: 3,\n                            xxl: 3,\n                        }}\n                        renderItem = {item => (\n                            <List.Item>\n                                <Card\n                                    title={item.name}\n                                    extra={<AddToCartButton itemId={item.id} />}\n                                >\n                                    <img src={item.imageUrl}\n                                         alt={item.name}\n                                         style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\n                                    />\n                                    Price: {item.price}\n                                </Card>\n                            </List.Item>\n                            )\n                        }\n                    />\n            }\n        </div>\n\n    );\n}\n\nexport default FoodList;","import React, { useState, useEffect } from 'react';\nimport { Drawer, Button, Typography, message, List } from 'antd';\nimport {getCart, checkout} from \"../utils\";\n\nconst {Text} = Typography;\n\n\nfunction MyCart(props) {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [cartData, setCartData] = useState({totalPrice: 0, orderItemList:[]});\n    const [checking, setChecking] = useState(false);\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n    useEffect(() => {\n        if (!cartVisible) return;\n        setLoading(true);\n        getCart()\n            .then(cartData => {\n                setCartData(cartData);\n            })\n            .catch(err => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            })\n    },[cartVisible]);\n    return (\n        <>\n            <Button type=\"primary\"\n                    onClick={onOpenDrawer}\n                    shape=\"round\"\n            >\n                Cart\n            </Button>\n            <Drawer title=\"My shopping Cart\"\n                    placement=\"right\"\n                    onClose={onCloseDrawer}\n                    visible={cartVisible}\n                    footer={\n                        <div style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}>\n                         <Text>{`Total price: ${cartData ? cartData.totalPrice.toFixed(2) : 0}`}</Text>\n                            <div>\n                                <Button>Cancel</Button>\n                                <Button\n                                    onClick={onCheckOut}\n                                    type=\"primary\"\n                                    loading={checking}\n                                    disabled={loading || cartData?.orderItemList.length === 0}\n                                >\n                                    Checkout\n                                </Button>\n\n                            </div>\n                        </div>\n                    }\n            >\n                <List\n                    dataSource={cartData.orderItemList}\n                    loading={loading}\n                    renderItem={\n                        item => {\n                            return (\n                                <List.Item>\n                                    <List.Item.Meta\n                                        title={item.menuItem.name}\n                                        description={`$${item.price}`}\n                                    />\n                                </List.Item>\n                            )\n                        }\n                    }\n                />\n\n            </Drawer>\n        </>\n\n    );\n}\n\nexport default MyCart;","import React, {Component} from 'react';\nimport {Form, message, Button, Input, Modal} from \"antd\";\nimport {signup} from \"../utils\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\n\nclass SignupForm extends Component {\n    state = {\n        displayModal: false,\n    };\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        });\n    };\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        });\n    };\n\n    onFinish = (data) => {\n        signup(data)\n            .then(() => {\n                this.setState({\n                    displayModal: false,\n                });\n                message.success(`Successfully signed up`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    };\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register\n                </Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                { required: true, message: \"Please input your password!\" },\n                            ]}\n                        >\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"firstName\"\n                            rules={[\n                                { required: true, message: \"Please input your first name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"firstname\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"lastName\"\n                            rules={[\n                                { required: true, message: \"Please input your last name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"lastname\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default SignupForm;","import {Layout} from \"antd\";\nimport { Typography } from 'antd';\nimport {useState} from \"react\";\nimport './App.css';\nimport LoginForm from \"./components/LoginForm.js\";\nimport FoodList from \"./components/FoodList.js\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\nconst {Header, Content} = Layout;\nconst { Title } = Typography;\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n  return (\n    <Layout style={{height: \"100vh\"}}>\n        <Header>\n            <div className=\"header\">\n                <Title level={2}\n                       style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n                >\n                    Lai Food\n                </Title>\n                <div>\n                    { authed\n                        ?\n                        <MyCart />\n                        :\n                        <SignupForm />\n                    }\n                </div>\n            </div>\n        </Header>\n      <Content style={{\n        padding: \"50px\",\n        maxHeight: \"calc(100% - 64px)\",\n        overflowY: \"auto\",\n      }}>\n          {\n              authed ? <FoodList /> : <LoginForm onSuccess={() => setAuthed(true)}/>\n          }\n\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}